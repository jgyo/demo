on:
  workflow_dispatch

name: Sign WPF Demo
permissions:
  contents: write

env:
  APPLICATION_NAME: WpfDemo
  PROJECT_DIR: WpfDemo
  PROJECT_NAME: WpfDemo
  PROJECT_PATH: WpfDemo/WpfDemo.csproj
  ISS_PATH: WpfDemo/WpfDemo.iss
  OUTPUT_DIR: WpfDemo/output
  SECRET: ${{ secrets.STEALTHY_SECRET }}

jobs:
  build:
    name: Deploy WPF Demo
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup DotNet 8.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Restore Project
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build Project
        run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore

      - name: Publish Project
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release --no-build

      - name: Compile Installer      
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: ${{ env.ISS_PATH }}
          options: /O+

      - name: Rename Setup file
        run: ren ${{ env.OUTPUT_DIR }}/setup.exe ${{ env.APPLICATION_NAME }}.${{ github.ref_name }}.exe

      - name: Sign the installer
        uses: skymatic/code-sign-action@v1
        with:
          certificate: '${{ secrets.CERT }}'
          password: '${{ secrets.CERT_PASSWORD }}'
          certificatename: '${{ secrets.CERT_NAME }}'
          description: 'Installer'
          timestampUrl: 'http://timestamp.digicert.com'
          folder: '${{ env.OUTPUT_DIR }}'
          recursive: false

      - uses: actions/upload-artifact@v4
        with:
          # Name of the artifact to upload.
          # Optional. Default is 'artifact'
          name: ${{ env.APPLICATION_NAME }}

          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: ${{ env.OUTPUT_DIR }}/${{ env.APPLICATION_NAME }}.${{ github.ref_name }}.exe

          retention-days: 1
          compression-level: 0
          overwrite: true
          
